State 112 conflicts: 8 reduce/reduce


Grammar

    0 $accept: parsing $end

    1 parsing: class
    2        | import class

    3 import: import IMPORT module NEWLINE
    4       | import IMPORT module AS IDENTIFIER NEWLINE
    5       | import FROM module IMPORT IDENTIFIER NEWLINE
    6       | import FROM module IMPORT MULTIPLICATION NEWLINE
    7       | IMPORT module NEWLINE
    8       | IMPORT module AS IDENTIFIER NEWLINE
    9       | FROM module IMPORT IDENTIFIER NEWLINE
   10       | FROM module IMPORT MULTIPLICATION NEWLINE

   11 module: IDENTIFIER DOT module
   12       | IDENTIFIER

   13 class: CLASS IDENTIFIER COLON NEWLINE INDENT constructor code DEDENT
   14      | CLASS IDENTIFIER COLON NEWLINE INDENT constructor DEDENT
   15      | CLASS IDENTIFIER COLON NEWLINE INDENT code DEDENT

   16 constructor: DEF INIT LPAR SELF RPAR COLON NEWLINE INDENT code DEDENT
   17            | DEF INIT LPAR SELF COMMA parameters RPAR COLON NEWLINE INDENT code DEDENT

   18 identifier: SELF DOT IDENTIFIER
   19           | IDENTIFIER

   20 code: code assignment
   21     | code for
   22     | code if
   23     | code def
   24     | code call
   25     | code print
   26     | assignment
   27     | for
   28     | if
   29     | def
   30     | call
   31     | print

   32 assignment: identifier ASSIGN expression NEWLINE
   33           | identifier ASSIGN call
   34           | identifier operator ASSIGN expression NEWLINE
   35           | identifier ASSIGN STRING NEWLINE

   36 expression: number operator expression
   37           | identifier operator expression
   38           | number operator number
   39           | number
   40           | identifier

   41 number: INTEGER

   42 @1: %empty

   43 number: FLOAT @1

   44 operator: PLUS
   45         | MINUS
   46         | MULTIPLICATION

   47 @2: %empty

   48 operator: DIVISION @2

   49 for: FOR identifier IN identifier COLON NEWLINE INDENT code DEDENT

   50 if: IF condition COLON NEWLINE INDENT code DEDENT elifs ELSE COLON NEWLINE INDENT code DEDENT
   51   | IF condition COLON NEWLINE INDENT code DEDENT ELSE COLON NEWLINE INDENT code DEDENT
   52   | IF condition COLON NEWLINE INDENT code DEDENT

   53 elifs: elifs ELIF condition COLON NEWLINE INDENT code DEDENT
   54      | ELIF condition COLON NEWLINE INDENT code DEDENT

   55 condition: expression compare expression

   56 compare: EQUALS
   57        | NOTEQUALS
   58        | LTE
   59        | MTE
   60        | LT
   61        | MT

   62 def: DEF identifier LPAR parameters RPAR COLON NEWLINE INDENT code DEDENT

   63 parameters: identifier COMMA parameters
   64           | identifier
   65           | %empty

   66 call: identifier LPAR parameters RPAR NEWLINE

   67 print: PRINT LPAR STRING RPAR NEWLINE


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENTIFIER (258) 4 5 8 9 11 12 13 14 15 18 19
FLOAT <fval> (259) 43
INTEGER <fval> (260) 41
STRING <sval> (261) 35 67
INDENT (262) 13 14 15 16 17 49 50 51 52 53 54 62
DEDENT (263) 13 14 15 16 17 49 50 51 52 53 54 62
IMPORT (264) 3 4 5 6 7 8 9 10
FROM (265) 5 6 9 10
AS (266) 4 8
CLASS (267) 13 14 15
FOR (268) 49
IN (269) 49
IF (270) 50 51 52
ELIF (271) 53 54
ELSE (272) 50 51
DEF (273) 16 17 62
INIT (274) 16 17
SELF (275) 16 17 18
PRINT (276) 67
LPAR (277) 16 17 62 66 67
RPAR (278) 16 17 62 66 67
COMMA (279) 17 63
COLON (280) 13 14 15 16 17 49 50 51 52 53 54 62
EQUALS (281) 56
NOTEQUALS (282) 57
LTE (283) 58
MTE (284) 59
LT (285) 60
MT (286) 61
ASSIGN (287) 32 33 34 35
PLUS (288) 44
MINUS (289) 45
MULTIPLICATION (290) 6 10 46
DIVISION (291) 48
DOT (292) 11 18
NEWLINE (293) 3 4 5 6 7 8 9 10 13 14 15 16 17 32 34 35 49 50 51 52
    53 54 62 66 67


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
parsing (40)
    on left: 1 2, on right: 0
import (41)
    on left: 3 4 5 6 7 8 9 10, on right: 2 3 4 5 6
module (42)
    on left: 11 12, on right: 3 4 5 6 7 8 9 10 11
class (43)
    on left: 13 14 15, on right: 1 2
constructor (44)
    on left: 16 17, on right: 13 14
identifier (45)
    on left: 18 19, on right: 32 33 34 35 37 40 49 62 63 64 66
code (46)
    on left: 20 21 22 23 24 25 26 27 28 29 30 31, on right: 13 15 16
    17 20 21 22 23 24 25 49 50 51 52 53 54 62
assignment (47)
    on left: 32 33 34 35, on right: 20 26
expression (48)
    on left: 36 37 38 39 40, on right: 32 34 36 37 55
number <fval> (49)
    on left: 41 43, on right: 36 38 39
@1 (50)
    on left: 42, on right: 43
operator <op> (51)
    on left: 44 45 46 48, on right: 34 36 37 38
@2 (52)
    on left: 47, on right: 48
for (53)
    on left: 49, on right: 21 27
if (54)
    on left: 50 51 52, on right: 22 28
elifs (55)
    on left: 53 54, on right: 50 53
condition (56)
    on left: 55, on right: 50 51 52 53 54
compare (57)
    on left: 56 57 58 59 60 61, on right: 55
def (58)
    on left: 62, on right: 23 29
parameters (59)
    on left: 63 64 65, on right: 17 62 63 66
call (60)
    on left: 66, on right: 24 30 33
print (61)
    on left: 67, on right: 25 31


State 0

    0 $accept: . parsing $end

    IMPORT  shift, and go to state 1
    FROM    shift, and go to state 2
    CLASS   shift, and go to state 3

    parsing  go to state 4
    import   go to state 5
    class    go to state 6


State 1

    7 import: IMPORT . module NEWLINE
    8       | IMPORT . module AS IDENTIFIER NEWLINE

    IDENTIFIER  shift, and go to state 7

    module  go to state 8


State 2

    9 import: FROM . module IMPORT IDENTIFIER NEWLINE
   10       | FROM . module IMPORT MULTIPLICATION NEWLINE

    IDENTIFIER  shift, and go to state 7

    module  go to state 9


State 3

   13 class: CLASS . IDENTIFIER COLON NEWLINE INDENT constructor code DEDENT
   14      | CLASS . IDENTIFIER COLON NEWLINE INDENT constructor DEDENT
   15      | CLASS . IDENTIFIER COLON NEWLINE INDENT code DEDENT

    IDENTIFIER  shift, and go to state 10


State 4

    0 $accept: parsing . $end

    $end  shift, and go to state 11


State 5

    2 parsing: import . class
    3 import: import . IMPORT module NEWLINE
    4       | import . IMPORT module AS IDENTIFIER NEWLINE
    5       | import . FROM module IMPORT IDENTIFIER NEWLINE
    6       | import . FROM module IMPORT MULTIPLICATION NEWLINE

    IMPORT  shift, and go to state 12
    FROM    shift, and go to state 13
    CLASS   shift, and go to state 3

    class  go to state 14


State 6

    1 parsing: class .

    $default  reduce using rule 1 (parsing)


State 7

   11 module: IDENTIFIER . DOT module
   12       | IDENTIFIER .

    DOT  shift, and go to state 15

    $default  reduce using rule 12 (module)


State 8

    7 import: IMPORT module . NEWLINE
    8       | IMPORT module . AS IDENTIFIER NEWLINE

    AS       shift, and go to state 16
    NEWLINE  shift, and go to state 17


State 9

    9 import: FROM module . IMPORT IDENTIFIER NEWLINE
   10       | FROM module . IMPORT MULTIPLICATION NEWLINE

    IMPORT  shift, and go to state 18


State 10

   13 class: CLASS IDENTIFIER . COLON NEWLINE INDENT constructor code DEDENT
   14      | CLASS IDENTIFIER . COLON NEWLINE INDENT constructor DEDENT
   15      | CLASS IDENTIFIER . COLON NEWLINE INDENT code DEDENT

    COLON  shift, and go to state 19


State 11

    0 $accept: parsing $end .

    $default  accept


State 12

    3 import: import IMPORT . module NEWLINE
    4       | import IMPORT . module AS IDENTIFIER NEWLINE

    IDENTIFIER  shift, and go to state 7

    module  go to state 20


State 13

    5 import: import FROM . module IMPORT IDENTIFIER NEWLINE
    6       | import FROM . module IMPORT MULTIPLICATION NEWLINE

    IDENTIFIER  shift, and go to state 7

    module  go to state 21


State 14

    2 parsing: import class .

    $default  reduce using rule 2 (parsing)


State 15

   11 module: IDENTIFIER DOT . module

    IDENTIFIER  shift, and go to state 7

    module  go to state 22


State 16

    8 import: IMPORT module AS . IDENTIFIER NEWLINE

    IDENTIFIER  shift, and go to state 23


State 17

    7 import: IMPORT module NEWLINE .

    $default  reduce using rule 7 (import)


State 18

    9 import: FROM module IMPORT . IDENTIFIER NEWLINE
   10       | FROM module IMPORT . MULTIPLICATION NEWLINE

    IDENTIFIER      shift, and go to state 24
    MULTIPLICATION  shift, and go to state 25


State 19

   13 class: CLASS IDENTIFIER COLON . NEWLINE INDENT constructor code DEDENT
   14      | CLASS IDENTIFIER COLON . NEWLINE INDENT constructor DEDENT
   15      | CLASS IDENTIFIER COLON . NEWLINE INDENT code DEDENT

    NEWLINE  shift, and go to state 26


State 20

    3 import: import IMPORT module . NEWLINE
    4       | import IMPORT module . AS IDENTIFIER NEWLINE

    AS       shift, and go to state 27
    NEWLINE  shift, and go to state 28


State 21

    5 import: import FROM module . IMPORT IDENTIFIER NEWLINE
    6       | import FROM module . IMPORT MULTIPLICATION NEWLINE

    IMPORT  shift, and go to state 29


State 22

   11 module: IDENTIFIER DOT module .

    $default  reduce using rule 11 (module)


State 23

    8 import: IMPORT module AS IDENTIFIER . NEWLINE

    NEWLINE  shift, and go to state 30


State 24

    9 import: FROM module IMPORT IDENTIFIER . NEWLINE

    NEWLINE  shift, and go to state 31


State 25

   10 import: FROM module IMPORT MULTIPLICATION . NEWLINE

    NEWLINE  shift, and go to state 32


State 26

   13 class: CLASS IDENTIFIER COLON NEWLINE . INDENT constructor code DEDENT
   14      | CLASS IDENTIFIER COLON NEWLINE . INDENT constructor DEDENT
   15      | CLASS IDENTIFIER COLON NEWLINE . INDENT code DEDENT

    INDENT  shift, and go to state 33


State 27

    4 import: import IMPORT module AS . IDENTIFIER NEWLINE

    IDENTIFIER  shift, and go to state 34


State 28

    3 import: import IMPORT module NEWLINE .

    $default  reduce using rule 3 (import)


State 29

    5 import: import FROM module IMPORT . IDENTIFIER NEWLINE
    6       | import FROM module IMPORT . MULTIPLICATION NEWLINE

    IDENTIFIER      shift, and go to state 35
    MULTIPLICATION  shift, and go to state 36


State 30

    8 import: IMPORT module AS IDENTIFIER NEWLINE .

    $default  reduce using rule 8 (import)


State 31

    9 import: FROM module IMPORT IDENTIFIER NEWLINE .

    $default  reduce using rule 9 (import)


State 32

   10 import: FROM module IMPORT MULTIPLICATION NEWLINE .

    $default  reduce using rule 10 (import)


State 33

   13 class: CLASS IDENTIFIER COLON NEWLINE INDENT . constructor code DEDENT
   14      | CLASS IDENTIFIER COLON NEWLINE INDENT . constructor DEDENT
   15      | CLASS IDENTIFIER COLON NEWLINE INDENT . code DEDENT

    IDENTIFIER  shift, and go to state 37
    FOR         shift, and go to state 38
    IF          shift, and go to state 39
    DEF         shift, and go to state 40
    SELF        shift, and go to state 41
    PRINT       shift, and go to state 42

    constructor  go to state 43
    identifier   go to state 44
    code         go to state 45
    assignment   go to state 46
    for          go to state 47
    if           go to state 48
    def          go to state 49
    call         go to state 50
    print        go to state 51


State 34

    4 import: import IMPORT module AS IDENTIFIER . NEWLINE

    NEWLINE  shift, and go to state 52


State 35

    5 import: import FROM module IMPORT IDENTIFIER . NEWLINE

    NEWLINE  shift, and go to state 53


State 36

    6 import: import FROM module IMPORT MULTIPLICATION . NEWLINE

    NEWLINE  shift, and go to state 54


State 37

   19 identifier: IDENTIFIER .

    $default  reduce using rule 19 (identifier)


State 38

   49 for: FOR . identifier IN identifier COLON NEWLINE INDENT code DEDENT

    IDENTIFIER  shift, and go to state 37
    SELF        shift, and go to state 41

    identifier  go to state 55


State 39

   50 if: IF . condition COLON NEWLINE INDENT code DEDENT elifs ELSE COLON NEWLINE INDENT code DEDENT
   51   | IF . condition COLON NEWLINE INDENT code DEDENT ELSE COLON NEWLINE INDENT code DEDENT
   52   | IF . condition COLON NEWLINE INDENT code DEDENT

    IDENTIFIER  shift, and go to state 37
    FLOAT       shift, and go to state 56
    INTEGER     shift, and go to state 57
    SELF        shift, and go to state 41

    identifier  go to state 58
    expression  go to state 59
    number      go to state 60
    condition   go to state 61


State 40

   16 constructor: DEF . INIT LPAR SELF RPAR COLON NEWLINE INDENT code DEDENT
   17            | DEF . INIT LPAR SELF COMMA parameters RPAR COLON NEWLINE INDENT code DEDENT
   62 def: DEF . identifier LPAR parameters RPAR COLON NEWLINE INDENT code DEDENT

    IDENTIFIER  shift, and go to state 37
    INIT        shift, and go to state 62
    SELF        shift, and go to state 41

    identifier  go to state 63


State 41

   18 identifier: SELF . DOT IDENTIFIER

    DOT  shift, and go to state 64


State 42

   67 print: PRINT . LPAR STRING RPAR NEWLINE

    LPAR  shift, and go to state 65


State 43

   13 class: CLASS IDENTIFIER COLON NEWLINE INDENT constructor . code DEDENT
   14      | CLASS IDENTIFIER COLON NEWLINE INDENT constructor . DEDENT

    IDENTIFIER  shift, and go to state 37
    DEDENT      shift, and go to state 66
    FOR         shift, and go to state 38
    IF          shift, and go to state 39
    DEF         shift, and go to state 67
    SELF        shift, and go to state 41
    PRINT       shift, and go to state 42

    identifier  go to state 44
    code        go to state 68
    assignment  go to state 46
    for         go to state 47
    if          go to state 48
    def         go to state 49
    call        go to state 50
    print       go to state 51


State 44

   32 assignment: identifier . ASSIGN expression NEWLINE
   33           | identifier . ASSIGN call
   34           | identifier . operator ASSIGN expression NEWLINE
   35           | identifier . ASSIGN STRING NEWLINE
   66 call: identifier . LPAR parameters RPAR NEWLINE

    LPAR            shift, and go to state 69
    ASSIGN          shift, and go to state 70
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLICATION  shift, and go to state 73
    DIVISION        shift, and go to state 74

    operator  go to state 75


State 45

   15 class: CLASS IDENTIFIER COLON NEWLINE INDENT code . DEDENT
   20 code: code . assignment
   21     | code . for
   22     | code . if
   23     | code . def
   24     | code . call
   25     | code . print

    IDENTIFIER  shift, and go to state 37
    DEDENT      shift, and go to state 76
    FOR         shift, and go to state 38
    IF          shift, and go to state 39
    DEF         shift, and go to state 67
    SELF        shift, and go to state 41
    PRINT       shift, and go to state 42

    identifier  go to state 44
    assignment  go to state 77
    for         go to state 78
    if          go to state 79
    def         go to state 80
    call        go to state 81
    print       go to state 82


State 46

   26 code: assignment .

    $default  reduce using rule 26 (code)


State 47

   27 code: for .

    $default  reduce using rule 27 (code)


State 48

   28 code: if .

    $default  reduce using rule 28 (code)


State 49

   29 code: def .

    $default  reduce using rule 29 (code)


State 50

   30 code: call .

    $default  reduce using rule 30 (code)


State 51

   31 code: print .

    $default  reduce using rule 31 (code)


State 52

    4 import: import IMPORT module AS IDENTIFIER NEWLINE .

    $default  reduce using rule 4 (import)


State 53

    5 import: import FROM module IMPORT IDENTIFIER NEWLINE .

    $default  reduce using rule 5 (import)


State 54

    6 import: import FROM module IMPORT MULTIPLICATION NEWLINE .

    $default  reduce using rule 6 (import)


State 55

   49 for: FOR identifier . IN identifier COLON NEWLINE INDENT code DEDENT

    IN  shift, and go to state 83


State 56

   43 number: FLOAT . @1

    $default  reduce using rule 42 (@1)

    @1  go to state 84


State 57

   41 number: INTEGER .

    $default  reduce using rule 41 (number)


State 58

   37 expression: identifier . operator expression
   40           | identifier .

    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLICATION  shift, and go to state 73
    DIVISION        shift, and go to state 74

    $default  reduce using rule 40 (expression)

    operator  go to state 85


State 59

   55 condition: expression . compare expression

    EQUALS     shift, and go to state 86
    NOTEQUALS  shift, and go to state 87
    LTE        shift, and go to state 88
    MTE        shift, and go to state 89
    LT         shift, and go to state 90
    MT         shift, and go to state 91

    compare  go to state 92


State 60

   36 expression: number . operator expression
   38           | number . operator number
   39           | number .

    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLICATION  shift, and go to state 73
    DIVISION        shift, and go to state 74

    $default  reduce using rule 39 (expression)

    operator  go to state 93


State 61

   50 if: IF condition . COLON NEWLINE INDENT code DEDENT elifs ELSE COLON NEWLINE INDENT code DEDENT
   51   | IF condition . COLON NEWLINE INDENT code DEDENT ELSE COLON NEWLINE INDENT code DEDENT
   52   | IF condition . COLON NEWLINE INDENT code DEDENT

    COLON  shift, and go to state 94


State 62

   16 constructor: DEF INIT . LPAR SELF RPAR COLON NEWLINE INDENT code DEDENT
   17            | DEF INIT . LPAR SELF COMMA parameters RPAR COLON NEWLINE INDENT code DEDENT

    LPAR  shift, and go to state 95


State 63

   62 def: DEF identifier . LPAR parameters RPAR COLON NEWLINE INDENT code DEDENT

    LPAR  shift, and go to state 96


State 64

   18 identifier: SELF DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 97


State 65

   67 print: PRINT LPAR . STRING RPAR NEWLINE

    STRING  shift, and go to state 98


State 66

   14 class: CLASS IDENTIFIER COLON NEWLINE INDENT constructor DEDENT .

    $default  reduce using rule 14 (class)


State 67

   62 def: DEF . identifier LPAR parameters RPAR COLON NEWLINE INDENT code DEDENT

    IDENTIFIER  shift, and go to state 37
    SELF        shift, and go to state 41

    identifier  go to state 63


State 68

   13 class: CLASS IDENTIFIER COLON NEWLINE INDENT constructor code . DEDENT
   20 code: code . assignment
   21     | code . for
   22     | code . if
   23     | code . def
   24     | code . call
   25     | code . print

    IDENTIFIER  shift, and go to state 37
    DEDENT      shift, and go to state 99
    FOR         shift, and go to state 38
    IF          shift, and go to state 39
    DEF         shift, and go to state 67
    SELF        shift, and go to state 41
    PRINT       shift, and go to state 42

    identifier  go to state 44
    assignment  go to state 77
    for         go to state 78
    if          go to state 79
    def         go to state 80
    call        go to state 81
    print       go to state 82


State 69

   66 call: identifier LPAR . parameters RPAR NEWLINE

    IDENTIFIER  shift, and go to state 37
    SELF        shift, and go to state 41

    $default  reduce using rule 65 (parameters)

    identifier  go to state 100
    parameters  go to state 101


State 70

   32 assignment: identifier ASSIGN . expression NEWLINE
   33           | identifier ASSIGN . call
   35           | identifier ASSIGN . STRING NEWLINE

    IDENTIFIER  shift, and go to state 37
    FLOAT       shift, and go to state 56
    INTEGER     shift, and go to state 57
    STRING      shift, and go to state 102
    SELF        shift, and go to state 41

    identifier  go to state 103
    expression  go to state 104
    number      go to state 60
    call        go to state 105


State 71

   44 operator: PLUS .

    $default  reduce using rule 44 (operator)


State 72

   45 operator: MINUS .

    $default  reduce using rule 45 (operator)


State 73

   46 operator: MULTIPLICATION .

    $default  reduce using rule 46 (operator)


State 74

   48 operator: DIVISION . @2

    $default  reduce using rule 47 (@2)

    @2  go to state 106


State 75

   34 assignment: identifier operator . ASSIGN expression NEWLINE

    ASSIGN  shift, and go to state 107


State 76

   15 class: CLASS IDENTIFIER COLON NEWLINE INDENT code DEDENT .

    $default  reduce using rule 15 (class)


State 77

   20 code: code assignment .

    $default  reduce using rule 20 (code)


State 78

   21 code: code for .

    $default  reduce using rule 21 (code)


State 79

   22 code: code if .

    $default  reduce using rule 22 (code)


State 80

   23 code: code def .

    $default  reduce using rule 23 (code)


State 81

   24 code: code call .

    $default  reduce using rule 24 (code)


State 82

   25 code: code print .

    $default  reduce using rule 25 (code)


State 83

   49 for: FOR identifier IN . identifier COLON NEWLINE INDENT code DEDENT

    IDENTIFIER  shift, and go to state 37
    SELF        shift, and go to state 41

    identifier  go to state 108


State 84

   43 number: FLOAT @1 .

    $default  reduce using rule 43 (number)


State 85

   37 expression: identifier operator . expression

    IDENTIFIER  shift, and go to state 37
    FLOAT       shift, and go to state 56
    INTEGER     shift, and go to state 57
    SELF        shift, and go to state 41

    identifier  go to state 58
    expression  go to state 109
    number      go to state 60


State 86

   56 compare: EQUALS .

    $default  reduce using rule 56 (compare)


State 87

   57 compare: NOTEQUALS .

    $default  reduce using rule 57 (compare)


State 88

   58 compare: LTE .

    $default  reduce using rule 58 (compare)


State 89

   59 compare: MTE .

    $default  reduce using rule 59 (compare)


State 90

   60 compare: LT .

    $default  reduce using rule 60 (compare)


State 91

   61 compare: MT .

    $default  reduce using rule 61 (compare)


State 92

   55 condition: expression compare . expression

    IDENTIFIER  shift, and go to state 37
    FLOAT       shift, and go to state 56
    INTEGER     shift, and go to state 57
    SELF        shift, and go to state 41

    identifier  go to state 58
    expression  go to state 110
    number      go to state 60


State 93

   36 expression: number operator . expression
   38           | number operator . number

    IDENTIFIER  shift, and go to state 37
    FLOAT       shift, and go to state 56
    INTEGER     shift, and go to state 57
    SELF        shift, and go to state 41

    identifier  go to state 58
    expression  go to state 111
    number      go to state 112


State 94

   50 if: IF condition COLON . NEWLINE INDENT code DEDENT elifs ELSE COLON NEWLINE INDENT code DEDENT
   51   | IF condition COLON . NEWLINE INDENT code DEDENT ELSE COLON NEWLINE INDENT code DEDENT
   52   | IF condition COLON . NEWLINE INDENT code DEDENT

    NEWLINE  shift, and go to state 113


State 95

   16 constructor: DEF INIT LPAR . SELF RPAR COLON NEWLINE INDENT code DEDENT
   17            | DEF INIT LPAR . SELF COMMA parameters RPAR COLON NEWLINE INDENT code DEDENT

    SELF  shift, and go to state 114


State 96

   62 def: DEF identifier LPAR . parameters RPAR COLON NEWLINE INDENT code DEDENT

    IDENTIFIER  shift, and go to state 37
    SELF        shift, and go to state 41

    $default  reduce using rule 65 (parameters)

    identifier  go to state 100
    parameters  go to state 115


State 97

   18 identifier: SELF DOT IDENTIFIER .

    $default  reduce using rule 18 (identifier)


State 98

   67 print: PRINT LPAR STRING . RPAR NEWLINE

    RPAR  shift, and go to state 116


State 99

   13 class: CLASS IDENTIFIER COLON NEWLINE INDENT constructor code DEDENT .

    $default  reduce using rule 13 (class)


State 100

   63 parameters: identifier . COMMA parameters
   64           | identifier .

    COMMA  shift, and go to state 117

    $default  reduce using rule 64 (parameters)


State 101

   66 call: identifier LPAR parameters . RPAR NEWLINE

    RPAR  shift, and go to state 118


State 102

   35 assignment: identifier ASSIGN STRING . NEWLINE

    NEWLINE  shift, and go to state 119


State 103

   37 expression: identifier . operator expression
   40           | identifier .
   66 call: identifier . LPAR parameters RPAR NEWLINE

    LPAR            shift, and go to state 69
    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLICATION  shift, and go to state 73
    DIVISION        shift, and go to state 74

    $default  reduce using rule 40 (expression)

    operator  go to state 85


State 104

   32 assignment: identifier ASSIGN expression . NEWLINE

    NEWLINE  shift, and go to state 120


State 105

   33 assignment: identifier ASSIGN call .

    $default  reduce using rule 33 (assignment)


State 106

   48 operator: DIVISION @2 .

    $default  reduce using rule 48 (operator)


State 107

   34 assignment: identifier operator ASSIGN . expression NEWLINE

    IDENTIFIER  shift, and go to state 37
    FLOAT       shift, and go to state 56
    INTEGER     shift, and go to state 57
    SELF        shift, and go to state 41

    identifier  go to state 58
    expression  go to state 121
    number      go to state 60


State 108

   49 for: FOR identifier IN identifier . COLON NEWLINE INDENT code DEDENT

    COLON  shift, and go to state 122


State 109

   37 expression: identifier operator expression .

    $default  reduce using rule 37 (expression)


State 110

   55 condition: expression compare expression .

    $default  reduce using rule 55 (condition)


State 111

   36 expression: number operator expression .

    $default  reduce using rule 36 (expression)


State 112

   36 expression: number . operator expression
   38           | number . operator number
   38           | number operator number .
   39           | number .

    PLUS            shift, and go to state 71
    MINUS           shift, and go to state 72
    MULTIPLICATION  shift, and go to state 73
    DIVISION        shift, and go to state 74

    COLON      reduce using rule 38 (expression)
    COLON      [reduce using rule 39 (expression)]
    EQUALS     reduce using rule 38 (expression)
    EQUALS     [reduce using rule 39 (expression)]
    NOTEQUALS  reduce using rule 38 (expression)
    NOTEQUALS  [reduce using rule 39 (expression)]
    LTE        reduce using rule 38 (expression)
    LTE        [reduce using rule 39 (expression)]
    MTE        reduce using rule 38 (expression)
    MTE        [reduce using rule 39 (expression)]
    LT         reduce using rule 38 (expression)
    LT         [reduce using rule 39 (expression)]
    MT         reduce using rule 38 (expression)
    MT         [reduce using rule 39 (expression)]
    NEWLINE    reduce using rule 38 (expression)
    NEWLINE    [reduce using rule 39 (expression)]
    $default   reduce using rule 38 (expression)

    operator  go to state 93


State 113

   50 if: IF condition COLON NEWLINE . INDENT code DEDENT elifs ELSE COLON NEWLINE INDENT code DEDENT
   51   | IF condition COLON NEWLINE . INDENT code DEDENT ELSE COLON NEWLINE INDENT code DEDENT
   52   | IF condition COLON NEWLINE . INDENT code DEDENT

    INDENT  shift, and go to state 123


State 114

   16 constructor: DEF INIT LPAR SELF . RPAR COLON NEWLINE INDENT code DEDENT
   17            | DEF INIT LPAR SELF . COMMA parameters RPAR COLON NEWLINE INDENT code DEDENT

    RPAR   shift, and go to state 124
    COMMA  shift, and go to state 125


State 115

   62 def: DEF identifier LPAR parameters . RPAR COLON NEWLINE INDENT code DEDENT

    RPAR  shift, and go to state 126


State 116

   67 print: PRINT LPAR STRING RPAR . NEWLINE

    NEWLINE  shift, and go to state 127


State 117

   63 parameters: identifier COMMA . parameters

    IDENTIFIER  shift, and go to state 37
    SELF        shift, and go to state 41

    $default  reduce using rule 65 (parameters)

    identifier  go to state 100
    parameters  go to state 128


State 118

   66 call: identifier LPAR parameters RPAR . NEWLINE

    NEWLINE  shift, and go to state 129


State 119

   35 assignment: identifier ASSIGN STRING NEWLINE .

    $default  reduce using rule 35 (assignment)


State 120

   32 assignment: identifier ASSIGN expression NEWLINE .

    $default  reduce using rule 32 (assignment)


State 121

   34 assignment: identifier operator ASSIGN expression . NEWLINE

    NEWLINE  shift, and go to state 130


State 122

   49 for: FOR identifier IN identifier COLON . NEWLINE INDENT code DEDENT

    NEWLINE  shift, and go to state 131


State 123

   50 if: IF condition COLON NEWLINE INDENT . code DEDENT elifs ELSE COLON NEWLINE INDENT code DEDENT
   51   | IF condition COLON NEWLINE INDENT . code DEDENT ELSE COLON NEWLINE INDENT code DEDENT
   52   | IF condition COLON NEWLINE INDENT . code DEDENT

    IDENTIFIER  shift, and go to state 37
    FOR         shift, and go to state 38
    IF          shift, and go to state 39
    DEF         shift, and go to state 67
    SELF        shift, and go to state 41
    PRINT       shift, and go to state 42

    identifier  go to state 44
    code        go to state 132
    assignment  go to state 46
    for         go to state 47
    if          go to state 48
    def         go to state 49
    call        go to state 50
    print       go to state 51


State 124

   16 constructor: DEF INIT LPAR SELF RPAR . COLON NEWLINE INDENT code DEDENT

    COLON  shift, and go to state 133


State 125

   17 constructor: DEF INIT LPAR SELF COMMA . parameters RPAR COLON NEWLINE INDENT code DEDENT

    IDENTIFIER  shift, and go to state 37
    SELF        shift, and go to state 41

    $default  reduce using rule 65 (parameters)

    identifier  go to state 100
    parameters  go to state 134


State 126

   62 def: DEF identifier LPAR parameters RPAR . COLON NEWLINE INDENT code DEDENT

    COLON  shift, and go to state 135


State 127

   67 print: PRINT LPAR STRING RPAR NEWLINE .

    $default  reduce using rule 67 (print)


State 128

   63 parameters: identifier COMMA parameters .

    $default  reduce using rule 63 (parameters)


State 129

   66 call: identifier LPAR parameters RPAR NEWLINE .

    $default  reduce using rule 66 (call)


State 130

   34 assignment: identifier operator ASSIGN expression NEWLINE .

    $default  reduce using rule 34 (assignment)


State 131

   49 for: FOR identifier IN identifier COLON NEWLINE . INDENT code DEDENT

    INDENT  shift, and go to state 136


State 132

   20 code: code . assignment
   21     | code . for
   22     | code . if
   23     | code . def
   24     | code . call
   25     | code . print
   50 if: IF condition COLON NEWLINE INDENT code . DEDENT elifs ELSE COLON NEWLINE INDENT code DEDENT
   51   | IF condition COLON NEWLINE INDENT code . DEDENT ELSE COLON NEWLINE INDENT code DEDENT
   52   | IF condition COLON NEWLINE INDENT code . DEDENT

    IDENTIFIER  shift, and go to state 37
    DEDENT      shift, and go to state 137
    FOR         shift, and go to state 38
    IF          shift, and go to state 39
    DEF         shift, and go to state 67
    SELF        shift, and go to state 41
    PRINT       shift, and go to state 42

    identifier  go to state 44
    assignment  go to state 77
    for         go to state 78
    if          go to state 79
    def         go to state 80
    call        go to state 81
    print       go to state 82


State 133

   16 constructor: DEF INIT LPAR SELF RPAR COLON . NEWLINE INDENT code DEDENT

    NEWLINE  shift, and go to state 138


State 134

   17 constructor: DEF INIT LPAR SELF COMMA parameters . RPAR COLON NEWLINE INDENT code DEDENT

    RPAR  shift, and go to state 139


State 135

   62 def: DEF identifier LPAR parameters RPAR COLON . NEWLINE INDENT code DEDENT

    NEWLINE  shift, and go to state 140


State 136

   49 for: FOR identifier IN identifier COLON NEWLINE INDENT . code DEDENT

    IDENTIFIER  shift, and go to state 37
    FOR         shift, and go to state 38
    IF          shift, and go to state 39
    DEF         shift, and go to state 67
    SELF        shift, and go to state 41
    PRINT       shift, and go to state 42

    identifier  go to state 44
    code        go to state 141
    assignment  go to state 46
    for         go to state 47
    if          go to state 48
    def         go to state 49
    call        go to state 50
    print       go to state 51


State 137

   50 if: IF condition COLON NEWLINE INDENT code DEDENT . elifs ELSE COLON NEWLINE INDENT code DEDENT
   51   | IF condition COLON NEWLINE INDENT code DEDENT . ELSE COLON NEWLINE INDENT code DEDENT
   52   | IF condition COLON NEWLINE INDENT code DEDENT .

    ELIF  shift, and go to state 142
    ELSE  shift, and go to state 143

    $default  reduce using rule 52 (if)

    elifs  go to state 144


State 138

   16 constructor: DEF INIT LPAR SELF RPAR COLON NEWLINE . INDENT code DEDENT

    INDENT  shift, and go to state 145


State 139

   17 constructor: DEF INIT LPAR SELF COMMA parameters RPAR . COLON NEWLINE INDENT code DEDENT

    COLON  shift, and go to state 146


State 140

   62 def: DEF identifier LPAR parameters RPAR COLON NEWLINE . INDENT code DEDENT

    INDENT  shift, and go to state 147


State 141

   20 code: code . assignment
   21     | code . for
   22     | code . if
   23     | code . def
   24     | code . call
   25     | code . print
   49 for: FOR identifier IN identifier COLON NEWLINE INDENT code . DEDENT

    IDENTIFIER  shift, and go to state 37
    DEDENT      shift, and go to state 148
    FOR         shift, and go to state 38
    IF          shift, and go to state 39
    DEF         shift, and go to state 67
    SELF        shift, and go to state 41
    PRINT       shift, and go to state 42

    identifier  go to state 44
    assignment  go to state 77
    for         go to state 78
    if          go to state 79
    def         go to state 80
    call        go to state 81
    print       go to state 82


State 142

   54 elifs: ELIF . condition COLON NEWLINE INDENT code DEDENT

    IDENTIFIER  shift, and go to state 37
    FLOAT       shift, and go to state 56
    INTEGER     shift, and go to state 57
    SELF        shift, and go to state 41

    identifier  go to state 58
    expression  go to state 59
    number      go to state 60
    condition   go to state 149


State 143

   51 if: IF condition COLON NEWLINE INDENT code DEDENT ELSE . COLON NEWLINE INDENT code DEDENT

    COLON  shift, and go to state 150


State 144

   50 if: IF condition COLON NEWLINE INDENT code DEDENT elifs . ELSE COLON NEWLINE INDENT code DEDENT
   53 elifs: elifs . ELIF condition COLON NEWLINE INDENT code DEDENT

    ELIF  shift, and go to state 151
    ELSE  shift, and go to state 152


State 145

   16 constructor: DEF INIT LPAR SELF RPAR COLON NEWLINE INDENT . code DEDENT

    IDENTIFIER  shift, and go to state 37
    FOR         shift, and go to state 38
    IF          shift, and go to state 39
    DEF         shift, and go to state 67
    SELF        shift, and go to state 41
    PRINT       shift, and go to state 42

    identifier  go to state 44
    code        go to state 153
    assignment  go to state 46
    for         go to state 47
    if          go to state 48
    def         go to state 49
    call        go to state 50
    print       go to state 51


State 146

   17 constructor: DEF INIT LPAR SELF COMMA parameters RPAR COLON . NEWLINE INDENT code DEDENT

    NEWLINE  shift, and go to state 154


State 147

   62 def: DEF identifier LPAR parameters RPAR COLON NEWLINE INDENT . code DEDENT

    IDENTIFIER  shift, and go to state 37
    FOR         shift, and go to state 38
    IF          shift, and go to state 39
    DEF         shift, and go to state 67
    SELF        shift, and go to state 41
    PRINT       shift, and go to state 42

    identifier  go to state 44
    code        go to state 155
    assignment  go to state 46
    for         go to state 47
    if          go to state 48
    def         go to state 49
    call        go to state 50
    print       go to state 51


State 148

   49 for: FOR identifier IN identifier COLON NEWLINE INDENT code DEDENT .

    $default  reduce using rule 49 (for)


State 149

   54 elifs: ELIF condition . COLON NEWLINE INDENT code DEDENT

    COLON  shift, and go to state 156


State 150

   51 if: IF condition COLON NEWLINE INDENT code DEDENT ELSE COLON . NEWLINE INDENT code DEDENT

    NEWLINE  shift, and go to state 157


State 151

   53 elifs: elifs ELIF . condition COLON NEWLINE INDENT code DEDENT

    IDENTIFIER  shift, and go to state 37
    FLOAT       shift, and go to state 56
    INTEGER     shift, and go to state 57
    SELF        shift, and go to state 41

    identifier  go to state 58
    expression  go to state 59
    number      go to state 60
    condition   go to state 158


State 152

   50 if: IF condition COLON NEWLINE INDENT code DEDENT elifs ELSE . COLON NEWLINE INDENT code DEDENT

    COLON  shift, and go to state 159


State 153

   16 constructor: DEF INIT LPAR SELF RPAR COLON NEWLINE INDENT code . DEDENT
   20 code: code . assignment
   21     | code . for
   22     | code . if
   23     | code . def
   24     | code . call
   25     | code . print

    IDENTIFIER  shift, and go to state 37
    DEDENT      shift, and go to state 160
    FOR         shift, and go to state 38
    IF          shift, and go to state 39
    DEF         shift, and go to state 67
    SELF        shift, and go to state 41
    PRINT       shift, and go to state 42

    identifier  go to state 44
    assignment  go to state 77
    for         go to state 78
    if          go to state 79
    def         go to state 80
    call        go to state 81
    print       go to state 82


State 154

   17 constructor: DEF INIT LPAR SELF COMMA parameters RPAR COLON NEWLINE . INDENT code DEDENT

    INDENT  shift, and go to state 161


State 155

   20 code: code . assignment
   21     | code . for
   22     | code . if
   23     | code . def
   24     | code . call
   25     | code . print
   62 def: DEF identifier LPAR parameters RPAR COLON NEWLINE INDENT code . DEDENT

    IDENTIFIER  shift, and go to state 37
    DEDENT      shift, and go to state 162
    FOR         shift, and go to state 38
    IF          shift, and go to state 39
    DEF         shift, and go to state 67
    SELF        shift, and go to state 41
    PRINT       shift, and go to state 42

    identifier  go to state 44
    assignment  go to state 77
    for         go to state 78
    if          go to state 79
    def         go to state 80
    call        go to state 81
    print       go to state 82


State 156

   54 elifs: ELIF condition COLON . NEWLINE INDENT code DEDENT

    NEWLINE  shift, and go to state 163


State 157

   51 if: IF condition COLON NEWLINE INDENT code DEDENT ELSE COLON NEWLINE . INDENT code DEDENT

    INDENT  shift, and go to state 164


State 158

   53 elifs: elifs ELIF condition . COLON NEWLINE INDENT code DEDENT

    COLON  shift, and go to state 165


State 159

   50 if: IF condition COLON NEWLINE INDENT code DEDENT elifs ELSE COLON . NEWLINE INDENT code DEDENT

    NEWLINE  shift, and go to state 166


State 160

   16 constructor: DEF INIT LPAR SELF RPAR COLON NEWLINE INDENT code DEDENT .

    $default  reduce using rule 16 (constructor)


State 161

   17 constructor: DEF INIT LPAR SELF COMMA parameters RPAR COLON NEWLINE INDENT . code DEDENT

    IDENTIFIER  shift, and go to state 37
    FOR         shift, and go to state 38
    IF          shift, and go to state 39
    DEF         shift, and go to state 67
    SELF        shift, and go to state 41
    PRINT       shift, and go to state 42

    identifier  go to state 44
    code        go to state 167
    assignment  go to state 46
    for         go to state 47
    if          go to state 48
    def         go to state 49
    call        go to state 50
    print       go to state 51


State 162

   62 def: DEF identifier LPAR parameters RPAR COLON NEWLINE INDENT code DEDENT .

    $default  reduce using rule 62 (def)


State 163

   54 elifs: ELIF condition COLON NEWLINE . INDENT code DEDENT

    INDENT  shift, and go to state 168


State 164

   51 if: IF condition COLON NEWLINE INDENT code DEDENT ELSE COLON NEWLINE INDENT . code DEDENT

    IDENTIFIER  shift, and go to state 37
    FOR         shift, and go to state 38
    IF          shift, and go to state 39
    DEF         shift, and go to state 67
    SELF        shift, and go to state 41
    PRINT       shift, and go to state 42

    identifier  go to state 44
    code        go to state 169
    assignment  go to state 46
    for         go to state 47
    if          go to state 48
    def         go to state 49
    call        go to state 50
    print       go to state 51


State 165

   53 elifs: elifs ELIF condition COLON . NEWLINE INDENT code DEDENT

    NEWLINE  shift, and go to state 170


State 166

   50 if: IF condition COLON NEWLINE INDENT code DEDENT elifs ELSE COLON NEWLINE . INDENT code DEDENT

    INDENT  shift, and go to state 171


State 167

   17 constructor: DEF INIT LPAR SELF COMMA parameters RPAR COLON NEWLINE INDENT code . DEDENT
   20 code: code . assignment
   21     | code . for
   22     | code . if
   23     | code . def
   24     | code . call
   25     | code . print

    IDENTIFIER  shift, and go to state 37
    DEDENT      shift, and go to state 172
    FOR         shift, and go to state 38
    IF          shift, and go to state 39
    DEF         shift, and go to state 67
    SELF        shift, and go to state 41
    PRINT       shift, and go to state 42

    identifier  go to state 44
    assignment  go to state 77
    for         go to state 78
    if          go to state 79
    def         go to state 80
    call        go to state 81
    print       go to state 82


State 168

   54 elifs: ELIF condition COLON NEWLINE INDENT . code DEDENT

    IDENTIFIER  shift, and go to state 37
    FOR         shift, and go to state 38
    IF          shift, and go to state 39
    DEF         shift, and go to state 67
    SELF        shift, and go to state 41
    PRINT       shift, and go to state 42

    identifier  go to state 44
    code        go to state 173
    assignment  go to state 46
    for         go to state 47
    if          go to state 48
    def         go to state 49
    call        go to state 50
    print       go to state 51


State 169

   20 code: code . assignment
   21     | code . for
   22     | code . if
   23     | code . def
   24     | code . call
   25     | code . print
   51 if: IF condition COLON NEWLINE INDENT code DEDENT ELSE COLON NEWLINE INDENT code . DEDENT

    IDENTIFIER  shift, and go to state 37
    DEDENT      shift, and go to state 174
    FOR         shift, and go to state 38
    IF          shift, and go to state 39
    DEF         shift, and go to state 67
    SELF        shift, and go to state 41
    PRINT       shift, and go to state 42

    identifier  go to state 44
    assignment  go to state 77
    for         go to state 78
    if          go to state 79
    def         go to state 80
    call        go to state 81
    print       go to state 82


State 170

   53 elifs: elifs ELIF condition COLON NEWLINE . INDENT code DEDENT

    INDENT  shift, and go to state 175


State 171

   50 if: IF condition COLON NEWLINE INDENT code DEDENT elifs ELSE COLON NEWLINE INDENT . code DEDENT

    IDENTIFIER  shift, and go to state 37
    FOR         shift, and go to state 38
    IF          shift, and go to state 39
    DEF         shift, and go to state 67
    SELF        shift, and go to state 41
    PRINT       shift, and go to state 42

    identifier  go to state 44
    code        go to state 176
    assignment  go to state 46
    for         go to state 47
    if          go to state 48
    def         go to state 49
    call        go to state 50
    print       go to state 51


State 172

   17 constructor: DEF INIT LPAR SELF COMMA parameters RPAR COLON NEWLINE INDENT code DEDENT .

    $default  reduce using rule 17 (constructor)


State 173

   20 code: code . assignment
   21     | code . for
   22     | code . if
   23     | code . def
   24     | code . call
   25     | code . print
   54 elifs: ELIF condition COLON NEWLINE INDENT code . DEDENT

    IDENTIFIER  shift, and go to state 37
    DEDENT      shift, and go to state 177
    FOR         shift, and go to state 38
    IF          shift, and go to state 39
    DEF         shift, and go to state 67
    SELF        shift, and go to state 41
    PRINT       shift, and go to state 42

    identifier  go to state 44
    assignment  go to state 77
    for         go to state 78
    if          go to state 79
    def         go to state 80
    call        go to state 81
    print       go to state 82


State 174

   51 if: IF condition COLON NEWLINE INDENT code DEDENT ELSE COLON NEWLINE INDENT code DEDENT .

    $default  reduce using rule 51 (if)


State 175

   53 elifs: elifs ELIF condition COLON NEWLINE INDENT . code DEDENT

    IDENTIFIER  shift, and go to state 37
    FOR         shift, and go to state 38
    IF          shift, and go to state 39
    DEF         shift, and go to state 67
    SELF        shift, and go to state 41
    PRINT       shift, and go to state 42

    identifier  go to state 44
    code        go to state 178
    assignment  go to state 46
    for         go to state 47
    if          go to state 48
    def         go to state 49
    call        go to state 50
    print       go to state 51


State 176

   20 code: code . assignment
   21     | code . for
   22     | code . if
   23     | code . def
   24     | code . call
   25     | code . print
   50 if: IF condition COLON NEWLINE INDENT code DEDENT elifs ELSE COLON NEWLINE INDENT code . DEDENT

    IDENTIFIER  shift, and go to state 37
    DEDENT      shift, and go to state 179
    FOR         shift, and go to state 38
    IF          shift, and go to state 39
    DEF         shift, and go to state 67
    SELF        shift, and go to state 41
    PRINT       shift, and go to state 42

    identifier  go to state 44
    assignment  go to state 77
    for         go to state 78
    if          go to state 79
    def         go to state 80
    call        go to state 81
    print       go to state 82


State 177

   54 elifs: ELIF condition COLON NEWLINE INDENT code DEDENT .

    $default  reduce using rule 54 (elifs)


State 178

   20 code: code . assignment
   21     | code . for
   22     | code . if
   23     | code . def
   24     | code . call
   25     | code . print
   53 elifs: elifs ELIF condition COLON NEWLINE INDENT code . DEDENT

    IDENTIFIER  shift, and go to state 37
    DEDENT      shift, and go to state 180
    FOR         shift, and go to state 38
    IF          shift, and go to state 39
    DEF         shift, and go to state 67
    SELF        shift, and go to state 41
    PRINT       shift, and go to state 42

    identifier  go to state 44
    assignment  go to state 77
    for         go to state 78
    if          go to state 79
    def         go to state 80
    call        go to state 81
    print       go to state 82


State 179

   50 if: IF condition COLON NEWLINE INDENT code DEDENT elifs ELSE COLON NEWLINE INDENT code DEDENT .

    $default  reduce using rule 50 (if)


State 180

   53 elifs: elifs ELIF condition COLON NEWLINE INDENT code DEDENT .

    $default  reduce using rule 53 (elifs)
